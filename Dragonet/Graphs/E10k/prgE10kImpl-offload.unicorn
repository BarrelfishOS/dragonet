graph e10kPRG {
    cluster Rx {
        cluster L2Ether {
            boolean Classified {
                attr "source"
                spawn poll Classified
                port true[ValidLength]
                port false[] }

            boolean ValidLength {
                port true[ValidCRC]
                port false[] }

            boolean ValidCRC {
                port true[.C5TupleFilter]
                port false[] }

            /*
            node ClassifyL3_ {
                port ipv4[.L3IPv4Classified .L3IPv4Checksum_]
                port other[.C5TupleFilter] }
             */

        }

        /*
         * This happens after the queues now
        cluster L3IPv4 {

            boolean Classified {
                implementation E10kL3IPv4Classified
                attr "software"
                port true false[]
                constraint true "IPv4"
                constraint false "!IPv4" }

            node Checksum_ {
                port out[ValidChecksum .C5TupleFilter] }

            boolean ValidChecksum {
                implementation E10kL3IPv4ValidChecksum
                attr "software"
                port true false[] }
        }
        */

        config C5TupleFilter {
            type { (sip:   <UInt 32>,
                    dip:   <UInt 32>,
                    proto: <Enum (TCP,UDP,SCP,OTHER)>,
                    sport: <UInt 16>,
                    dport: <UInt 16>,
                    prio:  Int 1 7,
                    queue: UInt 2) } <,128>
            function config5tuple
            port queues[Queues]
            port default[CFDirFilter] }

        config CFDirFilter {
            type { (sip:   UInt 32,
                    dip:   UInt 32,
                    proto: Enum (TCP,UDP,SCP,OTHER),
                    sport: UInt 16,
                    dport: UInt 16,
                    queue: UInt 2) }
            function configFDir
            port queues[Queues]
            port default[Queues] }

        config Queues {
            //implementation E10kRxQueue
            attr "unproductive"
            attr "software"
            attr "init"
            attr "sink"
            spawn poll Queues
            port out[isIPv4]
            port drop[]
            port init[]
        }

        node isIPv4 {
            attr "software"
            port true[E10kIPv4Csum]
            port false[noIPv4Out]

            predicate true "pred(EthType, IPv4)"
            predicate false "not(pred(EthType, IPv4))"
        }

        node noIPv4Out {
            attr "software"
            port out[]
        }

        node E10kIPv4Csum {
            attr "software"
            port out[]
            /*
            port valid[E10kIPv4CsumValid]
            port invalid[E10kIPv4CsumInvalid]
            */
        }

        /*
        node E10kIPv4CsumValid {
            attr "software"
            port out[]
        }

        node E10kIPv4CsumInvalid {
            attr "software"
            port out[]
        }
        */

    }

    cluster Tx {
        config Queues {
            // implementation E10kTxQueue0
            attr "sink"
            attr "source"
            attr "software"
            port out[] }
    }
}
