.TH NETPERF-WRAPPER "1" "November 2013" "Netperf-wrapper v0.6.1-git." "User Commands"
.SH NAME
Netperf-wrapper \- manual page for Netperf-wrapper v0.6.1-git.
.SH SYNOPSIS
.B netperf-wrapper
[\fIoptions\fR] \fI<host|test|input file \fR...\fI>\fR
.SH INVOCATION
When run, netperf-wrapper must be supplied either (a) a test name and one or
more host names to connect to, or (b) one or more input files containing data
from previous runs to post-process.
.PP
Test names, hostnames and input file names can all be specified as unqualified
arguments, and netperf-wrapper will do its best to guess which is which. For
each argument, if it is an existing file, it is assumed to be an input file, if
it is the name of an existing test configuration it's assumed to be a test name,
and if neither of those are true, it is assumed to be a host name. The \fB-i\fR
and \fB-H\fR switches can be used to explicitly specify the interpretation of an
argument.

.SH DESCRIPTION
Netperf-wrapper is a wrapper around \fI netperf \fR and similar tools to
run predefined tests and aggregate and plot the results. It defines several
tests that can be run against one or more hosts, primarily targeted at testing
for the presence of bufferbloat under various conditions.
.PP
The aggregated data is saved in (gzipped) JSON format for later processing
and/or import into other tools. The JSON format is documented below.
.PP
Apart from the JSON format, the data can be output as csv values, emacs org
mode tables or plots. Each test can specify several different plots, including
time-series plots of the values against each other, as well as CDF plots of
(e.g.) ping times.
.PP
Plots can be output to the formats supported by matplotlib by specifying the
output filename with \fB-o\fR \fIoutput.{png,ps,pdf,svg}\fR. If no output file
is specified, the plot is diplayed using matplotlib's interactive plot browser,
which also allows saving of the output (in .png format).

.SH REQUIREMENTS
Netperf-wrapper runs on Python, versions 2.6 through 3.3. Plotting requires a
functional matplotlib installation (but everything else can run without
matplotlib). For the interactive plot viewer, a graphical display (and suitably
configured matplotlib) is required.
.PP
Most tests employ the \fInetperf\fR benchmarking tool to run the tests. Version
2.6 or higher is required, and netperf must be compiled with the
\fB\-\-enable\-demo\fR option passed to ./configure. Some tests use \fIiperf\fR
in addition to, or instead of netperf. Both tools must be available in the
\fIPATH\fR.
.PP
For ICMP ping measurements, the version of \fIping\fR employed must support
output timestamping (the \fB\-D\fR parameter to GNU ping). This is \fBnot\fR
supported by the BSD and OSX versions of ping. As an alternative to the regular
ping command, the \fIfping\fR utility (see \fIfping.org\fR) can be employed. In
that case fping must be version 3.5 or greater. Netperf-wrapper will attempt to
detect the presence of fping in the \fIPATH\fR and check for support for the
\fB\-D\fR parameter. If this check is successful, fping will be employed for
ping data, otherwise the system ping will be used.

.SH OPTIONS
.TP
\fB\-o\fR OUTPUT, \fB\-\-output\fR=\fIOUTPUT\fR
File to write processed output to (default standard
out). The JSON data file is written to the same
directory as this file, if provided. Otherwise, the
data file is written to the current directory.
.TP
\fB\-i\fR INPUT, \fB\-\-input\fR=\fIINPUT\fR
File to read input from (instead of running tests).
Input files can also be specified as unqualified
arguments without using the \fB\-i\fR switch.
.TP
\fB\-f\fR FORMAT, \fB\-\-format\fR=\fIFORMAT\fR
Select output format (plot, csv, org_table, stats). Default
is no processed output (just writes the JSON data
file).
.TP
\fB\-p\fR PLOT, \fB\-\-plot\fR=\fIPLOT\fR
Select which plot to output for the given test
(implies \fB\-f\fR plot). Use the \fB\-\-list\-plots\fR option to see
available plots.
.TP
\fB\-t\fR TITLE, \fB\-\-title\-extra\fR=\fITITLE\fR
Text to add to plot title and data file name.
.TP
\fB\-n\fR NOTE, \fB\-\-note\fR=\fINOTE\fR
Add arbitrary text as a note to be stored in the JSON data file
(under the \fINOTE\fR key in the metadata object).
.TP
\fB\-r\fR RCFILE, \fB\-\-rcfile\fR=\fIRCFILE\fR
Load configuration data from \fIRCFILE\fR (default \fI~/.netperf-wrapperrc\fR). See
section below for information on the rc file format.
.TP
\fB\-x\fR, \fB\-\-extended\-metadata\fR
Collect extended metadata and store it with the data file.
May include details of your machine you don't want to distribute; see the
section on the data format below.
.TP
\fB\-\-remote\-metadata\fR=\fIHOSTNAME\fR
Collect extended metadata from a remote host. \fIHOSTNAME\fR is passed verbatim
to ssh, so can include hosts specified in ~/.ssh/config. Note that gathering the
data can take some time, since it involves executing several remote commands.
This option can be specified multiple times.
.TP
\fB--gui\fR
Run the netperf-wrapper GUI. All other options are used as defaults in the GUI,
but can be changed once it is running. See section below for a description of
the GUI.
.TP
\fBTest configuration:\fR
.PP
These options affect the behaviour of the test being run and have no
effect when parsing input files.
.TP
\fB\-H\fR HOST, \fB\-\-host\fR=\fIHOST\fR
Host to connect to for tests. For tests that support
it, multiple hosts can be specified by supplying this
option multiple times. Hosts can also be specified as
unqualified arguments; this parameter guarantees that
the argument be interpreted as a host name (rather
than being subject to auto\-detection between input
files, hostnames and test names).
.TP
\fB\-l\fR LENGTH, \fB\-\-length\fR=\fILENGTH\fR
Base test length (some tests may add some time to
this).
.TP
\fB\-s\fR STEP_SIZE, \fB\-\-step\-size\fR=\fISTEP_SIZE\fR
Measurement data point step size.
.TP
\fB\-d\fR DELAY, \fB\-\-delay\fR=\fIDELAY\fR
Number of seconds to delay parts of test (such as
bandwidth loaders).
.TP
\fB\-4\fR, \fB\-\-ipv4\fR
Use IPv4 for tests (some tests may ignore this).
.TP
\fB\-6\fR, \fB\-\-ipv6\fR
Use IPv6 for tests (some tests may ignore this).
.TP
\fB\-\-socket\-timeout\fR=\fISOCKET_TIMEOUT\fR
Socket timeout (in seconds) used for UDP delay measurement, to prevent
stalls on packet loss. Only enabled if the installed netperf version is
detected to support this (requires SVN version of netperf).
.IP
For the default value, see the output of netperf-wrapper -h. The value of this
parameter is an implicit upper bound on how long a round-trip time that can be
measured. As such you may need to adjust it if you are experiencing latency
above the default value. Set to 0 to disable.
.TP
\fBPlot configuration:\fR
.PP
These options are used to configure the appearance of plot output and
only make sense combined with \fB\-f\fI plot\fR.
.TP
\fB\-z\fR, \fB\-\-zero\-y\fR
Always start y axis of plot at zero, instead of autoscaling the axis (also disables log scales). Autoscaling is still enabled for the upper bound.
.TP
\fB\-\-disable\-log\fR
Disable log scales on plots.
.TP
\fB\-\-scale\-data\fR=\fISCALE_DATA\fR
Additional data files to consider when scaling the
plot axes (for plotting several plots with identical
axes). Note, this displays only the first data set, but with axis
scaling taking into account the additional data sets. Can be supplied
multiple times; see also \fB\-\-scale\-mode\fR.
.TP
\fB\-S\fR, \fB\-\-scale\-mode\fR
Treat file names (except for the first one) passed as
unqualified arguments as if passed as \fB\-\-scale\-data\fR
(default as if passed as \fB\-\-input\fR).
.TP
\fB\-\-no\-annotation\fR
Exclude annotation with hostnames, time and test
length from plots.
.TP
\fB\-\-no\-legend\fR
Exclude legend from plots.
.TP
\fB\-\-no\-title\fR
Exclude title from plots.
.IP
.TP
\fBMisc and debugging options:\fR
.TP
\fB\-L\fR LOG_FILE, \fB\-\-log\-file\fR=\fILOG_FILE\fR
Write debug log (test program output) to log file.
.TP
\fB\-\-list\-tests\fR
List available tests and exit.
.TP
\fB\-\-list\-plots\fR
List available plots for selected test and exit.
.TP
\fB\-V\fR, \fB\-\-version\fR
Show netperf\-wrapper version information and exit.
.TP
\fB\-h\fR, \fB\-\-help\fR
Show usage help message and exit.

.SH SUPPLIED TESTS
Test are supplied as Python files and can specify commands to run etc. For a
full list of the tests supported by netperf-wrapper, see the
\fB\-\-list\-tests\fR option.
.TP
\fBThe Realtime Response Under Load (RRUL) test\fR
.IP
This test exists in a couple of variants and is a partial implementation of the
RRUL specification as written by Dave Taht (see
\fIhttps://github.com/dtaht/deBloat/blob/master/spec/rrule.doc?raw=true\fR). It
works by running RTT measurement using ICMP ping and UDP roundtrip time
measurement, while loading up the link with eight TCP streams (four downloads,
four uploads). This quite reliably saturates the measured link (wherever the
bottleneck might be), and thus exposes bufferbloat when it is present.
.TP
\fBSimple TCP flow tests\fR
.IP
These tests combine a TCP flow (either in one direction, or both) with an ICMP
ping measurement. It's a simpler test than RRUL, but in some cases the single
TCP flow can be sufficient to saturate the link.
.TP
\fBUDP flood test\fR
.IP
This test runs \fIiperf\fR configured to emit 100Mbps of UDP packets targeted at
the test host, while measuring RTT using ICMP ping. It is useful for observing
latency in the face of a completely unresponsive packet stream.

.SH OUTPUT FORMATS
The following output formats are currently supported by netperf-wrapper:
.TP
\fBPlot output\fR (\fB\-f\fR \fIplot\fR)
.IP
Output test data as one of a series of graphical plots of timeseries data or
summarised as a CDF plot. Each test supplies a number of different plots; the
list of plots for a given test is output by the \fB\-\-list\-plots\fR switch
(which must be supplied along with a test name).
.IP
The plots are drawn by matplotlib, and can be displayed on the screen
interactively (requires a graphical display), or output to a file in svg, pdf,
ps and png formats. Using the \fB\-o\fR switch turns out file output (the file
format is inferred from the file name), while not supplying the switch turns on
the interactive plot viewer.

.TP
\fBTabulated output\fR (\fB\-f\fR \fIcsv\fR and \fB\-f\fR \fIorg_table\fR)
.IP
These formats output the numeric data in a tabulated format to be consumed by
other applications. The \fIcsv\fR output format is a comma-separated output that
can be imported into e.g. spreadsheets, while \fIorg_table\fR outputs a
tabulated output in the table format supported by Emacs org mode. The data is
output in text format to standard output, or written to a file if invoked with
the \fB\-o\fR parameter.

.TP
\fBStatistics output\fR (\fB\-f\fR \fIstats\fR)
.IP
This output format outputs various statistics about the test data, such as total
bandwidth consumed, and various statistical measures (min/max/mean/median/std
dev/variance) for each data source specified in the relevant test (this can
include some data sources not includes on plots). The data is output in text
format to standard output, or written to a file if invoked with the \fB\-o\fR
parameter.

.TP
\fBMetadata output\fR (\fB\-f\fR \fImetadata\fR)
.IP
This output format outputs the test metadata as pretty-printed json (also
suitable for human consumption). It is output as a list of objects, where each
object corresponds to the metadata of one test. Mostly useful for inspecting
metadata of stored data files.

.SH THE NETPERF-WRAPPER GUI
Netperf-wrapper comes equipped with a GUI to browse and plot previously captured
datasets. The GUI requires PyQt4; if this is installed, it can be launched with
the \fB--gui\fR parameter. Additionally, if netperf-wrapper is launched without
parameters and without a controlling terminal, the GUI will be launched
automatically.

The GUI can be used for interactively plotting previously captured datasets, and
makes it easy to compare results from several test runs. It presents a tabbed
interface to graphs of data files, allows dynamic configuration of plots, and
includes a metadata browser. For each loaded data file, additional data files
can be loaded and added to the plot, similar to what happens when specifying
multiple input files for plotting on the command line. A checkbox controls
whether the added data files are added as separate entries to the plot, or
whether they are used for scaling the output (mirroring the \fB--scale-mode\fR)
command line switch.

The GUI also incorporates matplotlib's interactive browsing toolbar, enabling
panning and zooming of the plot area,  dynamic configuration of plot and axis
parameters and labels and saving the plots to file. The exact dynamic features
supported depends on the installed version of matplotlib.

.SH RC FILE
Some of the command line options can be specified in an rc file. By default,
netperf-wrapper looks for this in \fI~/.netperf-wrapperrc\fR, but an alternative
location can be specified with the \fB--rcfile\fR command line option.

The rc file allows options to be specified globally, an optionally overridden
for specific tests. For an explanation of the options, refer to the annotated
example rc file, by default installed to
\fI/usr/share/doc/netperf-wrapper/netperf-wrapperrc.example\fR.

.SH EXAMPLES
Run the \fIrrul\fR test against \fItestserver.example.com\fI:
.IP
netperf-wrapper rrul testserver.example.com
.PP
This produces no output, but saves the result in a datafile named after the
current date and time (in gzipped JSON format).
.PP
Show an interactive plot of a previously run test, which stored the data in
\fIdatafile.json.gz\fR (requires a working matplotlib and a graphical display):
.IP
netperf-wrapper -f plot datafile.json.gz
.PP
Combine multiple data files into one CDF plot:
.IP
netperf-wrapper -p icmp_cdf *.json.gz

.SH THE JSON DATA FORMAT
The aggregated test data is saved in a file called
\fI<test_name>-<date>.<title>.json.gz\fR (the title part is omitted if no title
is specified by the \fB-t\fR parameter). This file contains the data points generated
during the test, as well as some metadata. The top-level json object has three
keys in it: \fIx_values\fR, \fIresults\fR and \fImetadata\fR.
.PP
\fIx_values\fR is an array of the x values for the test data (typically the time
values for timeseries data).
.PP
\fIresults\fR is a json object containing the result data series. The keys are the
data series names; the value for each key is an array of y values for that data
series. The data array has the same length as the \fIx_values\fR array, but there
may be missing data points (signified by null values).
.PP
\fImetadata\fR is an object containing various data points about the test run. The
metadata values are read in as configuration parameters when the data set is
loaded in for further processing. Not all tests use all the parameters, but
they are saved anyway.
.PP
Currently the metadata values are:
.IP
\fINAME\fR: The test name.
.IP
\fITITLE\fR: Any extra title specified by the \fB-t\fR parameter when the test was run.
.IP
\fIHOSTS\fR: List of the server hostnames connected to during the test.
.IP
\fILOCAL_HOST\fR: The hostname of the machine that ran the test.
.IP
\fILENGTH\fR: Test length in seconds, as specified by the \fB-l\fR parameter.
.IP
\fITOTAL_LENGTH\fR: Actual data series length, after the test has added time to the \fILENGTH\fR.
.IP
\fISTEP_SIZE\fR: Time step size granularity.
.IP
\fITIME\fR: ISO timestamp of the time the test was initiated.
.IP
\fINOTE\fR: Arbitrary text as entered with the \fB--note\fR switch when the test was run.
.IP
\fINETPERF_WRAPPER_VERSION\fR: Version of netperf-wrapper that generated the
data file.
.IP
\fIIP_VERSION\fR: IP version used to run test (as specified by command line
parameters, or auto-detected from \fIgetaddrinfo()\fR if unspecified).
.PP
If the \fB\-\-extended\-metadata\fR switch is turned on, the following
additional values are collected and stored (to the extent they are available
from the platform):
.IP
\fIKERNEL_NAME\fR: The kernel name as reported by \fIuname -s\fR.
.IP
\fIKERNEL_RELEASE\fR: The kernel release as reported by \fIuname -r\fR.
.IP
\fIIP_ADDRS\fR: IP addresses assigned to the machine running netperf-wrapper.
.IP
\fIGATEWAYS\fR: IP addresses of all detected default gateways on the system,
and the interfaces they are reachable through. Only available if the
\fInetstat\fR binary is present on the system.
.IP
\fIEGRESS_INFO\fR: Egress interface, its qdisc, offload, driver and BQL configuration,
and (if applicable) the IP address of the next-hop router used to reach the test target.
The egress interface and next-hop router requires that the \fIip\fR binary is
present on Linux, but can be extracted from \fIroute\fR on BSD. Qdisc
information requires the \fItc\fR binary to be present, and offload information
requires \fIethtool\fR.
.PP
If the \fB--remote-metadata\fR is used, the extended metadata info is gathered
for each of the hostnames specified. This is gathered under the
\fIREMOTE_METADATA\fR key in the metadata object, keyed by the hostname values
passed to \fB--remote-metadata\fR. Additionally, the \fIREMOTE_METADATA\fR
object will contain an object called \fIINGRESS_INFO\fR which is a duplicate of
\fIEGRESS_INFO\fR, but with the destination IP exchanged for the source address
of the host running netperf-wrapper. The assumption here is that
\fB--remote-metadata\fR is used to capture metadata of a router known to be in
the test path, in which case \fIINGRESS_INFO\fR will contain information about
the reverse path from the router (which is ingress from the point of view of the
host running netperf-wrapper). If the host being queried for remote metadata is
off the path, the contents of \fIINGRESS_INFO\fR will probably be the same as
that of \fIEGRESS_INFO\fR.

.SH BUGS
Under some conditions (such as severe bufferbloat), the UDP RTT measurements
done by netperf can experience packet loss to the extent that the test aborts
completely, which can cause missing data points for some measurement series.
The --socket-timeout feature can alleviate this, but requires a recent SVN
version of netperf to work. Netperf-wrapper tries to detect if netperf supports
this option and enables it for the UDP measurements if it does.
.PP
Probably many other bugs. Please report any found to
\fIhttps://github.com/tohojo/netperf-wrapper/issues\fR and include the output of
\fBnetperf-wrapper --version\fR in the report.

.SH AUTHORS
Netperf-wrapper is written and maintained by Toke Høiland-Jørgensen, with
contributions from Dave Taht and others.
